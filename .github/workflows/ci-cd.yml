
name: CI/CD

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

jobs:
  static-checks:
    name: Static Analysis (Lint & Typecheck)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Backend deps
        working-directory: backend
        run: npm ci || npm install
      - name: Backend lint
        working-directory: backend
        run: |
          if npm run | grep -q lint; then npm run lint; else echo "(no lint script)"; fi
      - name: Frontend deps
        working-directory: frontend
        run: npm ci || npm install --legacy-peer-deps
      - name: Frontend lint
        working-directory: frontend
        run: |
          if npm run | grep -q lint; then npm run lint; else echo "(no lint script)"; fi
      - name: Frontend typecheck
        working-directory: frontend
        run: |
          if npm run | grep -q typecheck; then npm run typecheck; else echo "(no typecheck script)"; fi

  tests:
    name: Tests & Coverage (Backend + Frontend)
    runs-on: ubuntu-latest
    needs: [static-checks]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install backend deps
        working-directory: backend
        run: npm ci || npm install
      - name: Backend tests (coverage)
        working-directory: backend
        env:
          NODE_ENV: test
        run: |
          npm test -- --ci --runInBand --coverage --coverageDirectory=coverage-unit --coverageReporters=json-summary --coverageReporters=text
          test -f coverage-unit/coverage-summary.json || (echo "Missing backend coverage summary" >&2; exit 1)
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci || npm install --legacy-peer-deps
      - name: Frontend tests (coverage)
        working-directory: frontend
        env:
          CI: true
        run: |
          npm test -- --coverage --watchAll=false --runInBand --coverageReporters=json-summary --coverageReporters=text
          test -f coverage/coverage-summary.json || (echo "Missing frontend coverage summary" >&2; exit 1)
      - name: Combine coverage (no gate here)
        run: |
          node -e "const fs=require('fs');const ensure=d=>{if(!fs.existsSync(d))fs.mkdirSync(d,{recursive:true});};const b=JSON.parse(fs.readFileSync('backend/coverage-unit/coverage-summary.json'));const f=JSON.parse(fs.readFileSync('frontend/coverage/coverage-summary.json'));const bt=b.total||b;const ft=f.total||f;const metrics=['lines','branches','functions','statements'];const total={};for(const m of metrics){const covered=(bt[m].covered||0)+(ft[m].covered||0);const t=(bt[m].total||0)+(ft[m].total||0);total[m]={covered,total:t,pct:t?+(covered*100/t).toFixed(2):0};}ensure('combined-coverage');fs.writeFileSync('combined-coverage/combined-coverage-summary.json',JSON.stringify({backend:bt,frontend:ft,total},null,2));console.log('Combined coverage summary:',total);"
      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.sha }}
          path: |
            backend/coverage-unit/**
            frontend/coverage/**
            combined-coverage/**
      - name: Coverage summary (job summary)
        if: always()
        run: |
          echo "### Coverage Summary" >> $GITHUB_STEP_SUMMARY
          node -e "const fs=require('fs');const read=p=>JSON.parse(fs.readFileSync(p)).total;const b=read('backend/coverage-unit/coverage-summary.json');const f=read('frontend/coverage/coverage-summary.json');const c=JSON.parse(fs.readFileSync('combined-coverage/combined-coverage-summary.json')).total;const metrics=['lines','branches','functions','statements'];let table='\n| Metric | Backend % | Frontend % | Combined % |\n|--------|-----------|------------|-----------|\n';table+=metrics.map(m=>'| '+m+' | '+b[m].pct+'% | '+f[m].pct+'% | '+c[m].pct+'% |').join('\n')+'\n';fs.appendFileSync(process.env.GITHUB_STEP_SUMMARY,table);"

  build:
    name: Frontend Build
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install frontend deps
        working-directory: frontend
        run: npm ci || npm install --legacy-peer-deps
      - name: Build frontend
        working-directory: frontend
        run: |
          if npm run | grep -q build; then npm run build; else echo "(no build script)"; fi
      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build-${{ github.sha }}
          path: frontend/build
      - name: Build summary
        if: always()
        run: |
          if [ -d frontend/build ]; then echo "\n### Build Output Size" >> $GITHUB_STEP_SUMMARY; du -sh frontend/build | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY; fi
