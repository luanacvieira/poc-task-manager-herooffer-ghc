name: CodeQL

on:
  workflow_run:
    workflows: ["Build"]
    types: [completed]
  schedule:
    - cron: '0 4 * * 1'
  # Execução manual da análise CodeQL (pode rodar isolada)
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

concurrency:
  group: codeql-${{ github.event.workflow_run.head_sha || github.sha }}
  cancel-in-progress: true

jobs:
  analyze:
    if: >-
      ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') || github.event_name == 'workflow_dispatch' }}
    name: CodeQL Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
          - language: javascript-typescript
            build-mode: none
    steps:
      - name: Checkout (workflow_run / manual)
        if: ${{ github.event_name == 'workflow_run' || github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha || github.sha }}
      - name: Setup Node (cache workflow_run / manual)
        if: ${{ github.event_name == 'workflow_run' || github.event_name == 'workflow_dispatch' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Checkout (scheduled)
        if: ${{ github.event_name == 'schedule' }}
        uses: actions/checkout@v4
      - name: Setup Node (cache - scheduled)
        if: ${{ github.event_name == 'schedule' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  gate:
    name: CodeQL Gate
    runs-on: ubuntu-latest
    needs: [analyze]
    if: always()
    steps:
      - name: Evaluate CodeQL Analysis
        run: |
          STATUS="${{ needs.analyze.result }}"
          echo "CodeQL analyze job result: $STATUS"
          if [ "$STATUS" = "success" ]; then
            echo "All security checks passed."
            exit 0
          fi
          if [ "$STATUS" = "skipped" ]; then
            echo "CodeQL analysis was skipped (upstream build not successful or condition unmet). Treating as neutral pass to not block PR."
            exit 0
          fi
          if [ "$STATUS" = "cancelled" ]; then
            echo "CodeQL analysis was cancelled (likely superseded by a newer commit due to concurrency). Treating as neutral so it does not block PRs."
            exit 0
          fi
          echo "CodeQL analysis status indicates failure: $STATUS" >&2
          exit 1

# Branch Protection: exigir Lint, Type Check (Frontend), Test Backend, Test Frontend, Coverage Gate (>=80%), CodeQL Gate.
