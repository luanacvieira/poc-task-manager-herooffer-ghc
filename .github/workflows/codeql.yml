name: CodeQL (LEGACY)

on:
  pull_request:
    branches: [ master, develop ]
  push:
    branches: [ master, develop ]
  schedule:
    - cron: '0 4 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

concurrency:
  group: codeql-${{ github.sha }}
  cancel-in-progress: true

jobs:
  analyze:
    name: CodeQL Analyze (javascript-typescript)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Diagnose repository state
        run: |
          echo "== git status =="; git status || true
          echo "== git rev-parse HEAD =="; git rev-parse HEAD || true
          echo "== top-level files =="; ls -1 | head -50
          echo "== sample js/ts files =="; find . -maxdepth 4 \( -name '*.js' -o -name '*.ts' \) | head -40
          COUNT=$(find . -name '*.js' -o -name '*.ts' | wc -l); echo "Total JS/TS files: $COUNT"; if [ "$COUNT" -eq 0 ]; then echo "::warning::Nenhum arquivo JS/TS encontrado no checkout"; fi

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          build-mode: none
          queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"
          upload: true

      - name: Backup SARIF artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-sarif-javascript
          path: '**/results/*.sarif'
          if-no-files-found: ignore

  gate:
    name: CodeQL Gate
    runs-on: ubuntu-latest
    needs: [analyze]
    if: always()
    steps:
      - name: Evaluate CodeQL Analysis
        run: |
          STATUS="${{ needs.analyze.result }}"
          echo "CodeQL analyze job result: $STATUS"
          if [ "$STATUS" = "success" ]; then
            echo "All security checks passed."
            exit 0
          fi
          if [ "$STATUS" = "skipped" ]; then
            echo "CodeQL analysis was skipped (upstream build not successful or condition unmet). Treating as neutral pass to not block PR."
            exit 0
          fi
          if [ "$STATUS" = "cancelled" ]; then
            echo "CodeQL analysis was cancelled (likely superseded by a newer commit due to concurrency). Treating as neutral so it does not block PRs."
            exit 0
          fi
          echo "CodeQL analysis status indicates failure: $STATUS" >&2
          exit 1

# Branch Protection: exigir Lint, Type Check (Frontend), Test Backend, Test Frontend, Coverage Gate (>=80%), CodeQL Gate.
