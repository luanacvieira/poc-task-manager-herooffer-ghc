name: CodeQL

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  schedule:
    - cron: '0 4 * * 1'

permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    name: CodeQL Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - language: actions
            build-mode: none
          - language: javascript-typescript
            build-mode: none
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          # queries: security-extended,security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  gate:
    name: CodeQL Gate
    runs-on: ubuntu-latest
    needs: [analyze]
    if: always()
    steps:
      - name: Evaluate CodeQL Analysis
        run: |
          if [ "${{ needs.analyze.result }}" != "success" ]; then
            echo "CodeQL analysis failed" >&2; exit 1; fi
          echo "All security checks passed."

# Notes:
# - Para bloquear merges, configure Branch Protection exigindo sucesso dos checks: "Coverage (Backend & Frontend)", "Gate (Coverage + CodeQL)" ou cada job individual.
# - GitHub não impede um push direto; ele bloqueia o merge se o status requerido falhar.
# - Se quiser rodar apenas em branches específicas, ajuste os filtros em 'on:'.
